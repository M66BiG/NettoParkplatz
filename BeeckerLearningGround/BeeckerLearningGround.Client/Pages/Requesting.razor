@page "/requesting"
@inject IDynamicHttp dynamicHttp
@rendermode InteractiveWebAssembly

<PageTitle>Request Test</PageTitle>

<h3>Requesting</h3>

@if(loading)
{
    <p>Loading...</p>
}
else
{
    <Virtualize Items="people" Context="d">
        <ItemContent>
            <h4>@d.title</h4>
            <p>@d.body</p>
            </ItemContent>
        <EmptyContent><p>Emptys</p></EmptyContent>
    </Virtualize>
}

@code {
    private RequestModel[]? people;

    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        dynamicHttp.SetBaseAdress("https://jsonplaceholder.typicode.com/");
        HttpClient httpClient = dynamicHttp.GetHttpClient();
        try
        {
            people = await httpClient.GetFromJsonAsync<RequestModel[]>("posts");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        loading = false;
    }
}
